import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

class Employee {
    private String name;
    private int employeeID;
    private String designation;
    private String department;
    private String contactInfo;

    public Employee(String name, int employeeID, String designation, String department, String contactInfo) {
        this.name = name;
        this.employeeID = employeeID;
        this.designation = designation;
        this.department = department;
        this.contactInfo = contactInfo;
    }

    // Getters and setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getEmployeeID() {
        return employeeID;
    }

    public void setEmployeeID(int employeeID) {
        this.employeeID = employeeID;
    }

    public String getDesignation() {
        return designation;
    }

    public void setDesignation(String designation) {
        this.designation = designation;
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }

    public String getContactInfo() {
        return contactInfo;
    }

    public void setContactInfo(String contactInfo) {
        this.contactInfo = contactInfo;
    }
}

class HRMS {
    private HashMap<Integer, Employee> employeeMap;
    private HashMap<Integer, String> attendanceMap;
    private ArrayList<String> leaveRequests;

    public HRMS() {
        employeeMap = new HashMap<>();
        attendanceMap = new HashMap<>();
        leaveRequests = new ArrayList<>();
    }

    public void addEmployee(Employee employee) {
        employeeMap.put(employee.getEmployeeID(), employee);
        System.out.println("Employee added successfully.");
    }

    public void viewEmployee(int employeeID) {
        Employee employee = employeeMap.get(employeeID);
        if (employee != null) {
            System.out.println("Employee Details:");
            System.out.println("Name: " + employee.getName());
            System.out.println("Employee ID: " + employee.getEmployeeID());
            System.out.println("Designation: " + employee.getDesignation());
            System.out.println("Department: " + employee.getDepartment());
            System.out.println("Contact Info: " + employee.getContactInfo());
        } else {
            System.out.println("Employee not found.");
        }
    }

    public void markAttendance(int employeeID, String status) {
        attendanceMap.put(employeeID, status);
        System.out.println("Attendance marked successfully.");
    }

    public void requestLeave(String leaveRequest) {
        leaveRequests.add(leaveRequest);
        System.out.println("Leave request submitted successfully.");
    }

    public void searchEmployee(String keyword) {
        boolean found = false;
        for (Employee employee : employeeMap.values()) {
            if (employee.getName().contains(keyword) || 
                String.valueOf(employee.getEmployeeID()).contains(keyword) || 
                employee.getDepartment().contains(keyword)) {
                System.out.println("Employee Details:");
                System.out.println("Name: " + employee.getName());
                System.out.println("Employee ID: " + employee.getEmployeeID());
                System.out.println("Designation: " + employee.getDesignation());
                System.out.println("Department: " + employee.getDepartment());
                System.out.println("Contact Info: " + employee.getContactInfo());
                found = true;
            }
        }
        if (!found) {
            System.out.println("No matching employee found.");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        HRMS hrms = new HRMS();

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Add Employee");
            System.out.println("2. View Employee");
            System.out.println("3. Mark Attendance");
            System.out.println("4. Request Leave");
            System.out.println("5. Search Employee");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter employee name: ");
                    scanner.nextLine(); // Consume newline
                    String name = scanner.nextLine();
                    System.out.print("Enter employee ID: ");
                    int employeeID = scanner.nextInt();
                    System.out.print("Enter designation: ");
                    scanner.nextLine(); // Consume newline
                    String designation = scanner.nextLine();
                    System.out.print("Enter department: ");
                    String department = scanner.nextLine();
                    System.out.print("Enter contact info: ");
                    String contactInfo = scanner.nextLine();
                    Employee employee = new Employee(name, employeeID, designation, department, contactInfo);
                    hrms.addEmployee(employee);
                    break;

                case 2:
                    System.out.print("Enter employee ID to view details: ");
                    int viewID = scanner.nextInt();
                    hrms.viewEmployee(viewID);
                    break;

                case 3:
                    System.out.print("Enter employee ID to mark attendance: ");
                    int attendanceID = scanner.nextInt();
                    System.out.print("Enter attendance status (Present/Absent/Leave): ");
                    String status = scanner.next();
                    hrms.markAttendance(attendanceID, status);
                    break;

                case 4:
                    System.out.print("Enter leave request details: ");
                    scanner.nextLine(); // Consume newline
                    String leaveRequest = scanner.nextLine();
                    hrms.requestLeave(leaveRequest);
                    break;

                case 5:
                    System.out.print("Enter search keyword: ");
                    scanner.nextLine(); // Consume newline
                    String keyword = scanner.nextLine();
                    hrms.searchEmployee(keyword);
                    break;

                case 6:
                    System.out.println("Exiting...");
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}
